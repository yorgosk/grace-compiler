/* This file was generated by SableCC (http://www.sablecc.org/). */

package compiler.node;

import compiler.analysis.*;

@SuppressWarnings("nls")
public final class ACondInParsTermcond extends PTermcond
{
    private PCondInPars _condInPars_;

    public ACondInParsTermcond()
    {
        // Constructor
    }

    public ACondInParsTermcond(
        @SuppressWarnings("hiding") PCondInPars _condInPars_)
    {
        // Constructor
        setCondInPars(_condInPars_);

    }

    @Override
    public Object clone()
    {
        return new ACondInParsTermcond(
            cloneNode(this._condInPars_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACondInParsTermcond(this);
    }

    public PCondInPars getCondInPars()
    {
        return this._condInPars_;
    }

    public void setCondInPars(PCondInPars node)
    {
        if(this._condInPars_ != null)
        {
            this._condInPars_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._condInPars_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._condInPars_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._condInPars_ == child)
        {
            this._condInPars_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._condInPars_ == oldChild)
        {
            setCondInPars((PCondInPars) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
